// Generated by view binder compiler. Do not edit!
package lk.jiat.app.varandesigns.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import lk.jiat.app.varandesigns.R;

public final class ActivityPlacedOrderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView designDate;

  @NonNull
  public final TextView designName;

  @NonNull
  public final TextView designPrice;

  @NonNull
  public final TextView designTime;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final TextView textView3;

  private ActivityPlacedOrderBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView designDate, @NonNull TextView designName, @NonNull TextView designPrice,
      @NonNull TextView designTime, @NonNull ImageView imageView2, @NonNull TextView textView3) {
    this.rootView = rootView;
    this.designDate = designDate;
    this.designName = designName;
    this.designPrice = designPrice;
    this.designTime = designTime;
    this.imageView2 = imageView2;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPlacedOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPlacedOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_placed_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPlacedOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.design_date;
      TextView designDate = ViewBindings.findChildViewById(rootView, id);
      if (designDate == null) {
        break missingId;
      }

      id = R.id.design_name;
      TextView designName = ViewBindings.findChildViewById(rootView, id);
      if (designName == null) {
        break missingId;
      }

      id = R.id.design_price;
      TextView designPrice = ViewBindings.findChildViewById(rootView, id);
      if (designPrice == null) {
        break missingId;
      }

      id = R.id.design_time;
      TextView designTime = ViewBindings.findChildViewById(rootView, id);
      if (designTime == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      return new ActivityPlacedOrderBinding((ConstraintLayout) rootView, designDate, designName,
          designPrice, designTime, imageView2, textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

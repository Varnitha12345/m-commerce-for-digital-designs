// Generated by view binder compiler. Do not edit!
package lk.jiat.app.varandesigns.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.ybq.android.spinkit.SpinKitView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import lk.jiat.app.varandesigns.R;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final EditText profileAddress;

  @NonNull
  public final EditText profileContact;

  @NonNull
  public final EditText profileEmail;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final EditText profileName;

  @NonNull
  public final SpinKitView spinKit;

  @NonNull
  public final Button updateProfileBtn;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout container, @NonNull EditText profileAddress,
      @NonNull EditText profileContact, @NonNull EditText profileEmail,
      @NonNull CircleImageView profileImage, @NonNull EditText profileName,
      @NonNull SpinKitView spinKit, @NonNull Button updateProfileBtn) {
    this.rootView = rootView;
    this.container = container;
    this.profileAddress = profileAddress;
    this.profileContact = profileContact;
    this.profileEmail = profileEmail;
    this.profileImage = profileImage;
    this.profileName = profileName;
    this.spinKit = spinKit;
    this.updateProfileBtn = updateProfileBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.profile_address;
      EditText profileAddress = ViewBindings.findChildViewById(rootView, id);
      if (profileAddress == null) {
        break missingId;
      }

      id = R.id.profile_contact;
      EditText profileContact = ViewBindings.findChildViewById(rootView, id);
      if (profileContact == null) {
        break missingId;
      }

      id = R.id.profile_email;
      EditText profileEmail = ViewBindings.findChildViewById(rootView, id);
      if (profileEmail == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.profile_name;
      EditText profileName = ViewBindings.findChildViewById(rootView, id);
      if (profileName == null) {
        break missingId;
      }

      id = R.id.spin_kit;
      SpinKitView spinKit = ViewBindings.findChildViewById(rootView, id);
      if (spinKit == null) {
        break missingId;
      }

      id = R.id.update_profile_btn;
      Button updateProfileBtn = ViewBindings.findChildViewById(rootView, id);
      if (updateProfileBtn == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, container, profileAddress,
          profileContact, profileEmail, profileImage, profileName, spinKit, updateProfileBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package lk.jiat.app.varandesigns.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.ybq.android.spinkit.SpinKitView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import lk.jiat.app.varandesigns.R;

public final class FragmentOrdersBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout container1;

  @NonNull
  public final RelativeLayout container2;

  @NonNull
  public final ImageView orderDesignImg;

  @NonNull
  public final TextView orderDesignName;

  @NonNull
  public final RecyclerView orderRecyclerView;

  @NonNull
  public final ScrollView scrollView3;

  @NonNull
  public final SpinKitView spinKit6;

  private FragmentOrdersBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout container1, @NonNull RelativeLayout container2,
      @NonNull ImageView orderDesignImg, @NonNull TextView orderDesignName,
      @NonNull RecyclerView orderRecyclerView, @NonNull ScrollView scrollView3,
      @NonNull SpinKitView spinKit6) {
    this.rootView = rootView;
    this.container1 = container1;
    this.container2 = container2;
    this.orderDesignImg = orderDesignImg;
    this.orderDesignName = orderDesignName;
    this.orderRecyclerView = orderRecyclerView;
    this.scrollView3 = scrollView3;
    this.spinKit6 = spinKit6;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOrdersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOrdersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_orders, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOrdersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container1;
      RelativeLayout container1 = ViewBindings.findChildViewById(rootView, id);
      if (container1 == null) {
        break missingId;
      }

      id = R.id.container2;
      RelativeLayout container2 = ViewBindings.findChildViewById(rootView, id);
      if (container2 == null) {
        break missingId;
      }

      id = R.id.order_design_img;
      ImageView orderDesignImg = ViewBindings.findChildViewById(rootView, id);
      if (orderDesignImg == null) {
        break missingId;
      }

      id = R.id.order_design_name;
      TextView orderDesignName = ViewBindings.findChildViewById(rootView, id);
      if (orderDesignName == null) {
        break missingId;
      }

      id = R.id.orderRecyclerView;
      RecyclerView orderRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (orderRecyclerView == null) {
        break missingId;
      }

      id = R.id.scroll_view3;
      ScrollView scrollView3 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView3 == null) {
        break missingId;
      }

      id = R.id.spin_kit6;
      SpinKitView spinKit6 = ViewBindings.findChildViewById(rootView, id);
      if (spinKit6 == null) {
        break missingId;
      }

      return new FragmentOrdersBinding((RelativeLayout) rootView, container1, container2,
          orderDesignImg, orderDesignName, orderRecyclerView, scrollView3, spinKit6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
